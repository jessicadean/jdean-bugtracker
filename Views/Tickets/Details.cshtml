@model jdean_bugtracker.Models.codeFirst.Ticket

@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Details";
}
<link href="~/Assets/sweetalert/sweetalert.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <div class="card card-outline-success">
                <div class="card-header">
                    <h4 class="m-b-0 text-white">Ticket # @Model.Id : @Model.Title</h4>
                </div>
                <div class="card-body">
                    <h3 class="card-title">Project: @Html.DisplayFor(model => model.Project.Title)</h3>
                    <h2></h2>

                    <hr />
                    <p class="card-text">
                        <dl class="dl-horizontal">

                            <dt>
                                Assigned To
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.AssignToUser.FullName)
                            </dd>

                            <dt>
                                Submitted By
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.OwnerUser.FullName)
                            </dd>

                            <dt>
                                Priority
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.TicketPriority.Name)
                            </dd>

                            <dt>
                                Status
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.TicketStatus.Name)
                            </dd>

                            <dt>
                                Issue Type
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.TicketType.Name)
                            </dd>


                            <dt>
                                @Html.DisplayNameFor(model => model.Description)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Description)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Created)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Created.LocalDateTime)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Updated)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Updated)
                            </dd>

                        </dl>

                    <p>

                        <a href=" @Url.Action("Edit", "Tickets", new { id = Model.Id })" class="btn btn-primary"><i class="fa fa-edit" aria-label="edit"></i> Edit</a>
                        <a href=" @Url.Action("Index", "Tickets", new { id = Model.Id })" class="btn btn-primary"><i class="fa fa-list" aria-label="list"></i> Back</a>

                        @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
                            @Html.ActionLink("Back to List", "Index")*@
                    </p>
                </div>
            </div>
        </div>

        <!--Ticket Attachment Upload Card-->
        <div class="col-md-6">
            <div class="card card-outline-inverse">
                <div class="card-header">
                    <h4 class="m-b-0 text-white">Upload Attachment</h4>
                </div>
                <div class="card-body">
                   
                    <p class="card-text">Include a brief description of your attachment.</p>

                    @*foreach (var ticketattachment in Model.Attachments.OrderByDescending(c => c.Id))
                        {
                            <p class="card-text">
                                <a href="@ticketattachment.FileUrl">
                                    <br />@ticketattachment.Description
                                </a> <br />
                                Uploader: @ticketattachment.Author.FullName <br />
                                Date: @ticketattachment.Created
                            </p>
                                        Delete Attachment
                            if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.Identity.GetUserId() == ticketattachment.AuthorId)
                                        {
                                            using (Html.BeginForm("DeleteAttachment", "Tickets", new { id = ticketattachment.Id }, FormMethod.Post, new { @class = "form-horizontal" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                < input type = "button" id = "deleteattach" class="btn btn-warning" value="Delete File" />
                                }
                        }
                        }*@
                    <!--Create Attachment-->
                    <div class="form-horizontal m-t-40">
                        @using (Html.BeginForm("CreateAttachment", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="number" name="TicketId" value="@Model.Id" hidden />
                            <div class="form-group">
                                <label class="control-label col-md-4">Upload File</label>
                                <div class="form-group">
                                    <input name="attachFile" type="file" class="form-control" />
                                    <div class="form-group">
                                        <input type="text" name="Description" class="form-control" rows="5" placeholder="File description" required />
                                    </div>
                                    <button type="submit" class="btn btn-warning waves-effect waves-light m-t-10">Attach</button>

                                </div>
                            </div>
                        }
                    </div>
                    <!--End Create Attachment-->
                </div>
                <div class="card card-body">
                    <h3 class="box-title m-b-0">Add a Comment</h3>
   @* <p class="text-muted m-b-30 font-13">Signed in as @User.Identity.Name</p>*@
                    @if (Request.IsAuthenticated)
            {

                using (Html.BeginForm("CreateComment", "Tickets", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                            @Html.AntiForgeryToken()
                            <input type="number" name="TicketId" value="@Model.Id" hidden />
                            <div class="form-horizontal">
                                <div class="form-group row">
                                    <label>Commenting as @User.Identity.Name</label>

                                    <textarea class="form-control" rows="5" name="Body"></textarea>
                                </div>
                            </div>


                            <div class="form-group m-b-0">
                                @*<div class="offset-sm-3 col-sm-9">*@
                                    <button type="submit" class="btn btn-info waves-effect waves-light m-t-10">Submit</button>
                                @*</div>*@
                            </div>
                        }
                    }
                </div>
            </div>
            <!--End Ticket Attachment Upload Card-->

        </div>

        <!--End Comment Box-->

    </div> <!--End Row-->
    <!--Attachments Table-->
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Attachments</h4>
                    <h6 class="card-subtitle">Displaying Authorized Users' Attachments</h6>
                    <div class="table-responsive">
                        <table class="table color-bordered-table inverse-bordered-table">
                            <thead>
                                <tr>
                                    <th>User</th>
                                    <th>File Title</th>
                                    <th>Upload Date</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ticketattachment in Model.Attachments.OrderByDescending(c => c.Id))
                                {
                                    <tr>
                                        <td>@ticketattachment.Author.FullName</td>
                                        <td>
                                            <a href="@ticketattachment.FileUrl">
                                                @ticketattachment.Description
                                            </a>
                                        </td>
                                        <td>@ticketattachment.Created.LocalDateTime</td>
                                        <th>

                                            <!--Delete Attach -->
                                            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.Identity.GetUserId() == ticketattachment.AuthorId)
                                            {
                                                using (Html.BeginForm("DeleteAttachment", "Tickets", new { id = ticketattachment.Id }, FormMethod.Post, new { @class = "form-horizontal" }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <input type="button" id="deleteattach" class="btn btn-sm btn-warning" value="&nbsp;X&nbsp;">
                                                    @*<button type="submit" id="deleteattach" class="btn btn-warning" value="Delete File" />*@
                                                    @*<button type="submit" id="deletattach" class="btn btn-sm btn-warning"><i class="fa fa-trash-o"></i>Remove</button>*@
                                                }
                                            }
                                            

                                            <!--End Delete Comment-->
                                            

                                        </th>
                                    </tr>
                                }
                            </tbody>

                        </table>
                        <!--End delete/edit comment-->
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!--Comments Table-->
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Comments</h4>
                    <h6 class="card-subtitle">Displaying Authorized Users' Comments</h6>
                    <div class="table-responsive">
                        <table class="table color-bordered-table info-bordered-table">
                            <thead>
                                <tr>
                                    <th>User</th>
                                    <th>Comment</th>
                                    <th>Comment Date</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var comment in Model.Comments.OrderByDescending(c => c.Id))
                                {
                                    <tr>
                                        <td>@comment.Author.FullName</td>
                                        <td>@comment.Body</td>
                                        <td>@comment.Created.LocalDateTime</td>
                                        <th>

                                            <!--Delete Comment -->
                                            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.Identity.GetUserId() == comment.AuthorId)
                                            {
                                                using (Html.BeginForm("DeleteComment", "Tickets", new { id = comment.Id }, FormMethod.Post, new { @class = "form-horizontal" }))
                                                {
                                                    @Html.AntiForgeryToken()

                                                    @*<button type="submit" id="deletecomment" class="btn btn-sm btn-outline-dark">onclick="deletecomment"<i class="fa fa-trash-o"></i></button>*@
                                                    <input type="button" id= "deletecomment" class="btn btn-sm btn-inverse" value="&nbsp;X&nbsp;" >
                                                    <a href="#myDIV" class="btn btn-sm btn-inverse" data-toggle="collapse"><i class="fa fa-pencil-square-o"></i></a>
                                                }

                                        <!--End Delete Comment-->
                                                @*@Html.AntiForgeryToken()*@

                                                <div id="myDIV" class="collapse">

                                                    @using (Html.BeginForm("EditComment", "Tickets", new { id = comment.Id }, FormMethod.Post, new { @class = "form-horizontal" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.HiddenFor(model => comment.Id)
                                                        @Html.HiddenFor(model => comment.AuthorId)
                                                        <input name="TicketId" value="@Model.Id" hidden />
                                                        <input name="AuthorId" value="@comment.AuthorId" hidden />

                                                        <span style="color:white"> <textarea name="Body" placeholder="Comment">@comment.Body</textarea></span>
                                                        <button class="btn btn-outline-success btn-sm" type="submit">Send Edit</button>
                                                    }
                                                </div>

                                            }

                                        </th>
                                    </tr>
                                }
                            </tbody>

                        </table>
                        <!--End delete/edit comment-->
                    </div>
                </div>
            </div>
        </div>

    </div>

</div>

<!--Ticket Histories Timeline-->
<div class="col-lg-8 col-xlg-9">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Ticket History Changelog</h4>
            <h6 class="card-subtitle">Timeline of changes made by users</h6>
            <div class="profiletimeline m-t-40">

                <hr>
                @foreach (var history in Model.Histories.OrderByDescending(h => h.Id))
                {
                    <div class="sl-item">
                        <div class="sl-left"> <img src="@history.Author.ProfilePic" alt="user" class="img-circle"> </div>
                        <div class="sl-right">
                            <div>
                                <p class="m-t-10">@history.Author.FullName edited @history.Property <span class="sl-date">@history.Created.LocalDateTime</span></p>
                                <p class="m-t-10">@history.OldValue was updated to @history.NewValue</p>
                            </div>
                            @*<div class="like-comm m-t-20"> </div>*@
                        </div>
                    </div>
                    <hr>
                }


            </div>
        </div>
    </div>
    <!--card-->
    <!--Ticket Histories-->
    @*<div class="row">
            <div class="col">
                <div class="card">
                    <h4 class="card-title">Ticket History</h4>
                    <h6 class="card-subtitle">Ticket History Changelog</h6>
                    <div class="table-responsive m-t-40">
                        <table id="example23" class="display nowrap table table-hover table-striped table-bordered" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>Project Id</th>
                                    @*<th>TicketId</th>
                                    <th>Property</th>
                                    <th>Old Value</th>
                                    <th>New Value</th>
                                    <th>Created</th>
                                    <th>Edited By</th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>Id</th>
                                    <th>TicketId</th>
                                    <th>Property</th>
                                    <th>Old Value</th>
                                    <th>New Value</th>
                                    <th>Created</th>
                                    <th>Edited By</th>
                                </tr>
                            </tfoot>
                            <tbody>
                                @foreach (var history in Model.Histories)
                                {
                                    <tr>

                                        <td>@history.Id</td>
                                        @*<td>@history.TicketId</td>
                                        <td>@history.Property</td>
                                        <td>@history.OldValue</td>
                                        <td>@history.NewValue</td>
                                        <td>@history.Created.LocalDateTime</td>
                                        <td>@history.Author.FullName</td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>*@
</div>
          



<!--Data Table for Ticket Details-->
<!-- Container fluid  -->
<!-- ============================================================== -->


@section Scripts {

    <!--Data Table-->
    @*<script src="~/Assets/datatables/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#myTable').DataTable();
            $(document).ready(function () {
                var table = $('#example').DataTable({
                    "columnDefs": [{
                        "visible": false,
                        "targets": 2
                    }],
                    "order": [
                        [2, 'asc']
                    ],
                    "displayLength": 25,
                    "drawCallback": function (settings) {
                        var api = this.api();
                        var rows = api.rows({
                            page: 'current'
                        }).nodes();
                        var last = null;
                        api.column(2, {
                            page: 'current'
                        }).data().each(function (group, i) {
                            if (last !== group) {
                                $(rows).eq(i).before('<tr class="group"><td colspan="5">' + group + '</td></tr>');
                                last = group;
                            }
                        });
                    }
                });
                // Order by the grouping
                $('#example tbody').on('click', 'tr.group', function () {
                    var currentOrder = table.order()[0];
                    if (currentOrder[0] === 2 && currentOrder[1] === 'asc') {
                        table.order([2, 'desc']).draw();
                    } else {
                        table.order([2, 'asc']).draw();
                    }
                });
            });
        });
        $('#example23').DataTable({
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ]
        });
    </script>*@
    <!--Sweet Alerts-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.10.1/sweetalert2.all.min.js"></script>
    <script src="~/Assets/sweetalert/sweetalert-dev.js"></script>
    <script src="~/Assets/sweetalert/jquery.sweet-alert.custom.js"></script>
    <script src="~/Assets/sweetalert/sweetalert.min.js"></script>

    <script>
        $('#deletecomment').on('click', function (e) {
            e.preventDefault();
            var form = $(this).parents('form');
            swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this comment!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
                showCloseButton: true,
                showCancelButton: true,
                focusConfirm: false,
                confirmButtonText:
                'Yes, delete',
                confirmButtonAriaLabel: 'Thumbs up, great!',
                cancelButtonText:
                'Cancel',
                cancelButtonAriaLabel: 'Thumbs down',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) form.submit();
            }
            )

                ;
        })
    </script>
    <script>
        $('#deleteattach').on('click', function (e) {
            e.preventDefault();
            var form = $(this).parents('form');
            swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this file!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
                showCloseButton: true,
                showCancelButton: true,
                focusConfirm: false,
                confirmButtonText:
                'Yes, delete',
                confirmButtonAriaLabel: 'Thumbs up, great!',
                cancelButtonText:
                'Cancel',
                cancelButtonAriaLabel: 'Thumbs down',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) form.submit();
            }
            )

                ;
        })
    </script>

}
